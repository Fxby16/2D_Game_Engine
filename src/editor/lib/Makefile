# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
TARGETDIR = .
TARGET = $(TARGETDIR)/libEngine.a
PCH = ../../include/pch.hpp
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -I../include -I../../include -I../../vendor/glm -I../../vendor/glfw/include/GLFW -I../../vendor/ImGui -I../../vendor/ImGui/backends -I../../include/vendor -I../../vendor/instrumentor -I../../vendor/glad/include -I../../vendor/stb_image -I../../vendor/FreeType/include -I../../vendor/soloud/include -I../../vendor/box2d/include -I../vendor/yaml-cpp/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LIBS += -lglfw3 -limgui_static -lX11 -lpthread -ldl -lz -lfreetype -lsoloud_static -lasound -lbox2d -lyaml-cpp
LDDEPS +=
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
OBJDIR = obj/Debug
DEFINES += -DDEBUG -DAPPLICATION
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -Og -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -Og -g -std=c++20
ALL_LDFLAGS += $(LDFLAGS) -L../../vendor/glfw/build/src -L../../vendor/ImGui -L../../vendor/FreeType/objs -L../../vendor/soloud/lib -L../../vendor/box2d/build/bin -L../vendor/yaml-cpp/build

else ifeq ($(config),release)
OBJDIR = obj/Release
DEFINES += -DRELEASE -DAPPLICATION
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -O3
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -O3 -std=c++20
ALL_LDFLAGS += $(LDFLAGS) -L../../vendor/glfw/build/src -L../../vendor/ImGui -L../../vendor/FreeType/objs -L../../vendor/soloud/lib -L../../vendor/box2d/build/bin -L../vendor/yaml-cpp/build -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/application.o
GENERATED += $(OBJDIR)/application_template.o
GENERATED += $(OBJDIR)/audio.o
GENERATED += $(OBJDIR)/camera.o
GENERATED += $(OBJDIR)/entity.o
GENERATED += $(OBJDIR)/entrypoint.o
GENERATED += $(OBJDIR)/framebuffer.o
GENERATED += $(OBJDIR)/glad.o
GENERATED += $(OBJDIR)/glfw.o
GENERATED += $(OBJDIR)/indexbuffer.o
GENERATED += $(OBJDIR)/input.o
GENERATED += $(OBJDIR)/memory.o
GENERATED += $(OBJDIR)/renderer.o
GENERATED += $(OBJDIR)/scene.o
GENERATED += $(OBJDIR)/scene_buttons.o
GENERATED += $(OBJDIR)/sceneserializer.o
GENERATED += $(OBJDIR)/shader.o
GENERATED += $(OBJDIR)/stb_image.o
GENERATED += $(OBJDIR)/structs.o
GENERATED += $(OBJDIR)/test.o
GENERATED += $(OBJDIR)/textrenderer.o
GENERATED += $(OBJDIR)/texture.o
GENERATED += $(OBJDIR)/texturesmanager.o
GENERATED += $(OBJDIR)/utilities.o
GENERATED += $(OBJDIR)/vertexarray.o
GENERATED += $(OBJDIR)/vertexbuffer.o
GENERATED += $(OBJDIR)/vertexbufferlayout.o
GENERATED += $(OBJDIR)/window.o
OBJECTS += $(OBJDIR)/application.o
OBJECTS += $(OBJDIR)/application_template.o
OBJECTS += $(OBJDIR)/audio.o
OBJECTS += $(OBJDIR)/camera.o
OBJECTS += $(OBJDIR)/entity.o
OBJECTS += $(OBJDIR)/entrypoint.o
OBJECTS += $(OBJDIR)/framebuffer.o
OBJECTS += $(OBJDIR)/glad.o
OBJECTS += $(OBJDIR)/glfw.o
OBJECTS += $(OBJDIR)/indexbuffer.o
OBJECTS += $(OBJDIR)/input.o
OBJECTS += $(OBJDIR)/memory.o
OBJECTS += $(OBJDIR)/renderer.o
OBJECTS += $(OBJDIR)/scene.o
OBJECTS += $(OBJDIR)/scene_buttons.o
OBJECTS += $(OBJDIR)/sceneserializer.o
OBJECTS += $(OBJDIR)/shader.o
OBJECTS += $(OBJDIR)/stb_image.o
OBJECTS += $(OBJDIR)/structs.o
OBJECTS += $(OBJDIR)/test.o
OBJECTS += $(OBJDIR)/textrenderer.o
OBJECTS += $(OBJDIR)/texture.o
OBJECTS += $(OBJDIR)/texturesmanager.o
OBJECTS += $(OBJDIR)/utilities.o
OBJECTS += $(OBJDIR)/vertexarray.o
OBJECTS += $(OBJDIR)/vertexbuffer.o
OBJECTS += $(OBJDIR)/vertexbufferlayout.o
OBJECTS += $(OBJDIR)/window.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Engine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Engine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) del /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/application.o: ../../src/application.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/audio.o: ../../src/audio.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/camera.o: ../../src/camera.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entity.o: ../../src/entity.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/entrypoint.o: ../../src/entrypoint.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/framebuffer.o: ../../src/framebuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/indexbuffer.o: ../../src/indexbuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/input.o: ../../src/input.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/memory.o: ../../src/memory.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/renderer.o: ../../src/renderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scene.o: ../../src/scene.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/shader.o: ../../src/shader.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_image.o: ../../src/stb_image.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/structs.o: ../../src/structs.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/textrenderer.o: ../../src/textrenderer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/texture.o: ../../src/texture.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/texturesmanager.o: ../../src/texturesmanager.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vertexarray.o: ../../src/vertexarray.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vertexbuffer.o: ../../src/vertexbuffer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/vertexbufferlayout.o: ../../src/vertexbufferlayout.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/window.o: ../../src/window.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/glad.o: ../../vendor/glad/src/glad.c
	@echo "$(notdir $<)"
	$(SILENT) $(CC) -include $(PCH_PLACEHOLDER) $(ALL_CFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/application_template.o: ../application/application_template.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/test.o: ../scripts/test.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/glfw.o: ../src/glfw.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/scene_buttons.o: ../src/scene_buttons.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/sceneserializer.o: ../src/sceneserializer.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/utilities.o: ../src/utilities.cpp
	@echo "$(notdir $<)"
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif